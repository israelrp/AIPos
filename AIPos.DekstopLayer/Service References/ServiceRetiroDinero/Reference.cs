//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServiceRetiroDinero {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRetiroDinero.IISRetiroDinero")]
    public interface IISRetiroDinero {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/Delete", ReplyAction="http://tempuri.org/IISRetiroDinero/DeleteResponse")]
        void Delete(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/Delete", ReplyAction="http://tempuri.org/IISRetiroDinero/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/Insert", ReplyAction="http://tempuri.org/IISRetiroDinero/InsertResponse")]
        AIPos.Domain.RetiroDinero Insert(AIPos.Domain.RetiroDinero retiroDinero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/Insert", ReplyAction="http://tempuri.org/IISRetiroDinero/InsertResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.RetiroDinero> InsertAsync(AIPos.Domain.RetiroDinero retiroDinero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/Update", ReplyAction="http://tempuri.org/IISRetiroDinero/UpdateResponse")]
        AIPos.Domain.RetiroDinero Update(AIPos.Domain.RetiroDinero retiroDinero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/Update", ReplyAction="http://tempuri.org/IISRetiroDinero/UpdateResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.RetiroDinero> UpdateAsync(AIPos.Domain.RetiroDinero retiroDinero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/SelectAllByFechaSucursal", ReplyAction="http://tempuri.org/IISRetiroDinero/SelectAllByFechaSucursalResponse")]
        AIPos.Domain.RetiroDinero[] SelectAllByFechaSucursal(System.DateTime Fecha, int SucursalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IISRetiroDinero/SelectAllByFechaSucursal", ReplyAction="http://tempuri.org/IISRetiroDinero/SelectAllByFechaSucursalResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.RetiroDinero[]> SelectAllByFechaSucursalAsync(System.DateTime Fecha, int SucursalId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IISRetiroDineroChannel : AIPos.DekstopLayer.ServiceRetiroDinero.IISRetiroDinero, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ISRetiroDineroClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServiceRetiroDinero.IISRetiroDinero>, AIPos.DekstopLayer.ServiceRetiroDinero.IISRetiroDinero {
        
        public ISRetiroDineroClient() {
        }
        
        public ISRetiroDineroClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ISRetiroDineroClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ISRetiroDineroClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ISRetiroDineroClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Delete(int Id) {
            base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int Id) {
            return base.Channel.DeleteAsync(Id);
        }
        
        public AIPos.Domain.RetiroDinero Insert(AIPos.Domain.RetiroDinero retiroDinero) {
            return base.Channel.Insert(retiroDinero);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.RetiroDinero> InsertAsync(AIPos.Domain.RetiroDinero retiroDinero) {
            return base.Channel.InsertAsync(retiroDinero);
        }
        
        public AIPos.Domain.RetiroDinero Update(AIPos.Domain.RetiroDinero retiroDinero) {
            return base.Channel.Update(retiroDinero);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.RetiroDinero> UpdateAsync(AIPos.Domain.RetiroDinero retiroDinero) {
            return base.Channel.UpdateAsync(retiroDinero);
        }
        
        public AIPos.Domain.RetiroDinero[] SelectAllByFechaSucursal(System.DateTime Fecha, int SucursalId) {
            return base.Channel.SelectAllByFechaSucursal(Fecha, SucursalId);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.RetiroDinero[]> SelectAllByFechaSucursalAsync(System.DateTime Fecha, int SucursalId) {
            return base.Channel.SelectAllByFechaSucursalAsync(Fecha, SucursalId);
        }
    }
}
