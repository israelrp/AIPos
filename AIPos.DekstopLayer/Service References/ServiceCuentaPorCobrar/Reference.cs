//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServiceCuentaPorCobrar {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceCuentaPorCobrar.ISCuentaPorCobrar")]
    public interface ISCuentaPorCobrar {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISCuentaPorCobrar/NuevaCuentaPorCobrar", ReplyAction="http://tempuri.org/ISCuentaPorCobrar/NuevaCuentaPorCobrarResponse")]
        AIPos.Domain.CuentaPorCobrar NuevaCuentaPorCobrar(AIPos.Domain.CuentaPorCobrar cuentaPorCobrar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISCuentaPorCobrar/NuevaCuentaPorCobrar", ReplyAction="http://tempuri.org/ISCuentaPorCobrar/NuevaCuentaPorCobrarResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.CuentaPorCobrar> NuevaCuentaPorCobrarAsync(AIPos.Domain.CuentaPorCobrar cuentaPorCobrar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorCliente", ReplyAction="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorClienteResponse")]
        AIPos.Domain.CuentaPorCobrar[] RecuperarPorCliente(int ClienteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorCliente", ReplyAction="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorClienteResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.CuentaPorCobrar[]> RecuperarPorClienteAsync(int ClienteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorClienteEstatus", ReplyAction="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorClienteEstatusResponse")]
        AIPos.Domain.CuentaPorCobrar[] RecuperarPorClienteEstatus(int ClienteId, byte Estatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorClienteEstatus", ReplyAction="http://tempuri.org/ISCuentaPorCobrar/RecuperarPorClienteEstatusResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.CuentaPorCobrar[]> RecuperarPorClienteEstatusAsync(int ClienteId, byte Estatus);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISCuentaPorCobrarChannel : AIPos.DekstopLayer.ServiceCuentaPorCobrar.ISCuentaPorCobrar, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SCuentaPorCobrarClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServiceCuentaPorCobrar.ISCuentaPorCobrar>, AIPos.DekstopLayer.ServiceCuentaPorCobrar.ISCuentaPorCobrar {
        
        public SCuentaPorCobrarClient() {
        }
        
        public SCuentaPorCobrarClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SCuentaPorCobrarClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SCuentaPorCobrarClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SCuentaPorCobrarClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AIPos.Domain.CuentaPorCobrar NuevaCuentaPorCobrar(AIPos.Domain.CuentaPorCobrar cuentaPorCobrar) {
            return base.Channel.NuevaCuentaPorCobrar(cuentaPorCobrar);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.CuentaPorCobrar> NuevaCuentaPorCobrarAsync(AIPos.Domain.CuentaPorCobrar cuentaPorCobrar) {
            return base.Channel.NuevaCuentaPorCobrarAsync(cuentaPorCobrar);
        }
        
        public AIPos.Domain.CuentaPorCobrar[] RecuperarPorCliente(int ClienteId) {
            return base.Channel.RecuperarPorCliente(ClienteId);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.CuentaPorCobrar[]> RecuperarPorClienteAsync(int ClienteId) {
            return base.Channel.RecuperarPorClienteAsync(ClienteId);
        }
        
        public AIPos.Domain.CuentaPorCobrar[] RecuperarPorClienteEstatus(int ClienteId, byte Estatus) {
            return base.Channel.RecuperarPorClienteEstatus(ClienteId, Estatus);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.CuentaPorCobrar[]> RecuperarPorClienteEstatusAsync(int ClienteId, byte Estatus) {
            return base.Channel.RecuperarPorClienteEstatusAsync(ClienteId, Estatus);
        }
    }
}
