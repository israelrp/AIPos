//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServiceDireccionFacturacion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceDireccionFacturacion.ISDireccionFacturacion")]
    public interface ISDireccionFacturacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDireccionFacturacion/Insert", ReplyAction="http://tempuri.org/ISDireccionFacturacion/InsertResponse")]
        AIPos.Domain.DireccionFacturacion Insert(AIPos.Domain.DireccionFacturacion direccionFacturacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDireccionFacturacion/Insert", ReplyAction="http://tempuri.org/ISDireccionFacturacion/InsertResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.DireccionFacturacion> InsertAsync(AIPos.Domain.DireccionFacturacion direccionFacturacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDireccionFacturacion/Delete", ReplyAction="http://tempuri.org/ISDireccionFacturacion/DeleteResponse")]
        void Delete(int DireccionId, int ClienteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDireccionFacturacion/Delete", ReplyAction="http://tempuri.org/ISDireccionFacturacion/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int DireccionId, int ClienteId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISDireccionFacturacionChannel : AIPos.DekstopLayer.ServiceDireccionFacturacion.ISDireccionFacturacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SDireccionFacturacionClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServiceDireccionFacturacion.ISDireccionFacturacion>, AIPos.DekstopLayer.ServiceDireccionFacturacion.ISDireccionFacturacion {
        
        public SDireccionFacturacionClient() {
        }
        
        public SDireccionFacturacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SDireccionFacturacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDireccionFacturacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDireccionFacturacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AIPos.Domain.DireccionFacturacion Insert(AIPos.Domain.DireccionFacturacion direccionFacturacion) {
            return base.Channel.Insert(direccionFacturacion);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.DireccionFacturacion> InsertAsync(AIPos.Domain.DireccionFacturacion direccionFacturacion) {
            return base.Channel.InsertAsync(direccionFacturacion);
        }
        
        public void Delete(int DireccionId, int ClienteId) {
            base.Channel.Delete(DireccionId, ClienteId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int DireccionId, int ClienteId) {
            return base.Channel.DeleteAsync(DireccionId, ClienteId);
        }
    }
}
