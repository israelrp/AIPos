//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServiceInventario {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceInventario.ISInventario")]
    public interface ISInventario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/Insert", ReplyAction="http://tempuri.org/ISInventario/InsertResponse")]
        AIPos.Domain.Inventario Insert(AIPos.Domain.Inventario entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/Insert", ReplyAction="http://tempuri.org/ISInventario/InsertResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.Inventario> InsertAsync(AIPos.Domain.Inventario entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/Update", ReplyAction="http://tempuri.org/ISInventario/UpdateResponse")]
        AIPos.Domain.Inventario Update(AIPos.Domain.Inventario entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/Update", ReplyAction="http://tempuri.org/ISInventario/UpdateResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.Inventario> UpdateAsync(AIPos.Domain.Inventario entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/Delete", ReplyAction="http://tempuri.org/ISInventario/DeleteResponse")]
        void Delete(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/Delete", ReplyAction="http://tempuri.org/ISInventario/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/SelectBySucursalFecha", ReplyAction="http://tempuri.org/ISInventario/SelectBySucursalFechaResponse")]
        AIPos.Domain.Inventario[] SelectBySucursalFecha(int SucursalId, long Day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISInventario/SelectBySucursalFecha", ReplyAction="http://tempuri.org/ISInventario/SelectBySucursalFechaResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.Inventario[]> SelectBySucursalFechaAsync(int SucursalId, long Day);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISInventarioChannel : AIPos.DekstopLayer.ServiceInventario.ISInventario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SInventarioClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServiceInventario.ISInventario>, AIPos.DekstopLayer.ServiceInventario.ISInventario {
        
        public SInventarioClient() {
        }
        
        public SInventarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SInventarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SInventarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SInventarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AIPos.Domain.Inventario Insert(AIPos.Domain.Inventario entity) {
            return base.Channel.Insert(entity);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.Inventario> InsertAsync(AIPos.Domain.Inventario entity) {
            return base.Channel.InsertAsync(entity);
        }
        
        public AIPos.Domain.Inventario Update(AIPos.Domain.Inventario entity) {
            return base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.Inventario> UpdateAsync(AIPos.Domain.Inventario entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public void Delete(int Id) {
            base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int Id) {
            return base.Channel.DeleteAsync(Id);
        }
        
        public AIPos.Domain.Inventario[] SelectBySucursalFecha(int SucursalId, long Day) {
            return base.Channel.SelectBySucursalFecha(SucursalId, Day);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.Inventario[]> SelectBySucursalFechaAsync(int SucursalId, long Day) {
            return base.Channel.SelectBySucursalFechaAsync(SucursalId, Day);
        }
    }
}
