//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServiceServicioApartado {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceServicioApartado.ISServicioApartado")]
    public interface ISServicioApartado {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/Insert", ReplyAction="http://tempuri.org/ISServicioApartado/InsertResponse")]
        AIPos.Domain.ServicioApartado Insert(AIPos.Domain.ServicioApartado servicioApartado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/Insert", ReplyAction="http://tempuri.org/ISServicioApartado/InsertResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado> InsertAsync(AIPos.Domain.ServicioApartado servicioApartado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/SelectAllPendientes", ReplyAction="http://tempuri.org/ISServicioApartado/SelectAllPendientesResponse")]
        AIPos.Domain.ServicioApartado[] SelectAllPendientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/SelectAllPendientes", ReplyAction="http://tempuri.org/ISServicioApartado/SelectAllPendientesResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado[]> SelectAllPendientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/Update", ReplyAction="http://tempuri.org/ISServicioApartado/UpdateResponse")]
        AIPos.Domain.ServicioApartado Update(AIPos.Domain.ServicioApartado servicioApartado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/Update", ReplyAction="http://tempuri.org/ISServicioApartado/UpdateResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado> UpdateAsync(AIPos.Domain.ServicioApartado servicioApartado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/SelectById", ReplyAction="http://tempuri.org/ISServicioApartado/SelectByIdResponse")]
        AIPos.Domain.ServicioApartado SelectById(int VentaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/SelectById", ReplyAction="http://tempuri.org/ISServicioApartado/SelectByIdResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado> SelectByIdAsync(int VentaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/RecuperarReporteServicioApartado", ReplyAction="http://tempuri.org/ISServicioApartado/RecuperarReporteServicioApartadoResponse")]
        AIPos.Domain.ReporteServicioApartado[] RecuperarReporteServicioApartado(int SucursalId, System.Nullable<int> EstatusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISServicioApartado/RecuperarReporteServicioApartado", ReplyAction="http://tempuri.org/ISServicioApartado/RecuperarReporteServicioApartadoResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.ReporteServicioApartado[]> RecuperarReporteServicioApartadoAsync(int SucursalId, System.Nullable<int> EstatusId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISServicioApartadoChannel : AIPos.DekstopLayer.ServiceServicioApartado.ISServicioApartado, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SServicioApartadoClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServiceServicioApartado.ISServicioApartado>, AIPos.DekstopLayer.ServiceServicioApartado.ISServicioApartado {
        
        public SServicioApartadoClient() {
        }
        
        public SServicioApartadoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SServicioApartadoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SServicioApartadoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SServicioApartadoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AIPos.Domain.ServicioApartado Insert(AIPos.Domain.ServicioApartado servicioApartado) {
            return base.Channel.Insert(servicioApartado);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado> InsertAsync(AIPos.Domain.ServicioApartado servicioApartado) {
            return base.Channel.InsertAsync(servicioApartado);
        }
        
        public AIPos.Domain.ServicioApartado[] SelectAllPendientes() {
            return base.Channel.SelectAllPendientes();
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado[]> SelectAllPendientesAsync() {
            return base.Channel.SelectAllPendientesAsync();
        }
        
        public AIPos.Domain.ServicioApartado Update(AIPos.Domain.ServicioApartado servicioApartado) {
            return base.Channel.Update(servicioApartado);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado> UpdateAsync(AIPos.Domain.ServicioApartado servicioApartado) {
            return base.Channel.UpdateAsync(servicioApartado);
        }
        
        public AIPos.Domain.ServicioApartado SelectById(int VentaId) {
            return base.Channel.SelectById(VentaId);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.ServicioApartado> SelectByIdAsync(int VentaId) {
            return base.Channel.SelectByIdAsync(VentaId);
        }
        
        public AIPos.Domain.ReporteServicioApartado[] RecuperarReporteServicioApartado(int SucursalId, System.Nullable<int> EstatusId) {
            return base.Channel.RecuperarReporteServicioApartado(SucursalId, EstatusId);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.ReporteServicioApartado[]> RecuperarReporteServicioApartadoAsync(int SucursalId, System.Nullable<int> EstatusId) {
            return base.Channel.RecuperarReporteServicioApartadoAsync(SucursalId, EstatusId);
        }
    }
}
