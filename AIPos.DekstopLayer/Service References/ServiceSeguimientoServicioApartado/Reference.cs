//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServiceSeguimientoServicioApartado {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSeguimientoServicioApartado.ISSeguimientoServicioApartado")]
    public interface ISSeguimientoServicioApartado {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/Insert", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/InsertResponse")]
        AIPos.Domain.SeguimientoServicioApartado Insert(AIPos.Domain.SeguimientoServicioApartado entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/Insert", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/InsertResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.SeguimientoServicioApartado> InsertAsync(AIPos.Domain.SeguimientoServicioApartado entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/Update", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/UpdateResponse")]
        AIPos.Domain.SeguimientoServicioApartado Update(AIPos.Domain.SeguimientoServicioApartado entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/Update", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/UpdateResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.SeguimientoServicioApartado> UpdateAsync(AIPos.Domain.SeguimientoServicioApartado entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/SelectById", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/SelectByIdResponse")]
        AIPos.Domain.SeguimientoServicioApartado SelectById(int VentaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/SelectById", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/SelectByIdResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.SeguimientoServicioApartado> SelectByIdAsync(int VentaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/GenerarNuevoFolioEnvio", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/GenerarNuevoFolioEnvioResponse")]
        int GenerarNuevoFolioEnvio();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSeguimientoServicioApartado/GenerarNuevoFolioEnvio", ReplyAction="http://tempuri.org/ISSeguimientoServicioApartado/GenerarNuevoFolioEnvioResponse")]
        System.Threading.Tasks.Task<int> GenerarNuevoFolioEnvioAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISSeguimientoServicioApartadoChannel : AIPos.DekstopLayer.ServiceSeguimientoServicioApartado.ISSeguimientoServicioApartado, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SSeguimientoServicioApartadoClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServiceSeguimientoServicioApartado.ISSeguimientoServicioApartado>, AIPos.DekstopLayer.ServiceSeguimientoServicioApartado.ISSeguimientoServicioApartado {
        
        public SSeguimientoServicioApartadoClient() {
        }
        
        public SSeguimientoServicioApartadoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SSeguimientoServicioApartadoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSeguimientoServicioApartadoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSeguimientoServicioApartadoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AIPos.Domain.SeguimientoServicioApartado Insert(AIPos.Domain.SeguimientoServicioApartado entity) {
            return base.Channel.Insert(entity);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.SeguimientoServicioApartado> InsertAsync(AIPos.Domain.SeguimientoServicioApartado entity) {
            return base.Channel.InsertAsync(entity);
        }
        
        public AIPos.Domain.SeguimientoServicioApartado Update(AIPos.Domain.SeguimientoServicioApartado entity) {
            return base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.SeguimientoServicioApartado> UpdateAsync(AIPos.Domain.SeguimientoServicioApartado entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public AIPos.Domain.SeguimientoServicioApartado SelectById(int VentaId) {
            return base.Channel.SelectById(VentaId);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.SeguimientoServicioApartado> SelectByIdAsync(int VentaId) {
            return base.Channel.SelectByIdAsync(VentaId);
        }
        
        public int GenerarNuevoFolioEnvio() {
            return base.Channel.GenerarNuevoFolioEnvio();
        }
        
        public System.Threading.Tasks.Task<int> GenerarNuevoFolioEnvioAsync() {
            return base.Channel.GenerarNuevoFolioEnvioAsync();
        }
    }
}
