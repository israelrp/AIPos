//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIPos.DekstopLayer.ServicePedidoSucursal {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePedidoSucursal.ISPedidoSucursal")]
    public interface ISPedidoSucursal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/Insert", ReplyAction="http://tempuri.org/ISPedidoSucursal/InsertResponse")]
        AIPos.Domain.PedidoSucursal Insert(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/Insert", ReplyAction="http://tempuri.org/ISPedidoSucursal/InsertResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal> InsertAsync(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/Update", ReplyAction="http://tempuri.org/ISPedidoSucursal/UpdateResponse")]
        AIPos.Domain.PedidoSucursal Update(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/Update", ReplyAction="http://tempuri.org/ISPedidoSucursal/UpdateResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal> UpdateAsync(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/Delete", ReplyAction="http://tempuri.org/ISPedidoSucursal/DeleteResponse")]
        void Delete(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/Delete", ReplyAction="http://tempuri.org/ISPedidoSucursal/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFecha", ReplyAction="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFechaResponse")]
        AIPos.Domain.PedidoSucursal[] SelectBySucursalFecha(int SucursalId, long Day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFecha", ReplyAction="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFechaResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal[]> SelectBySucursalFechaAsync(int SucursalId, long Day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFechaEntrega", ReplyAction="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFechaEntregaResponse")]
        AIPos.Domain.PedidoSucursal[] SelectBySucursalFechaEntrega(int SucursalId, long Day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFechaEntrega", ReplyAction="http://tempuri.org/ISPedidoSucursal/SelectBySucursalFechaEntregaResponse")]
        System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal[]> SelectBySucursalFechaEntregaAsync(int SucursalId, long Day);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISPedidoSucursalChannel : AIPos.DekstopLayer.ServicePedidoSucursal.ISPedidoSucursal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SPedidoSucursalClient : System.ServiceModel.ClientBase<AIPos.DekstopLayer.ServicePedidoSucursal.ISPedidoSucursal>, AIPos.DekstopLayer.ServicePedidoSucursal.ISPedidoSucursal {
        
        public SPedidoSucursalClient() {
        }
        
        public SPedidoSucursalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SPedidoSucursalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPedidoSucursalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPedidoSucursalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AIPos.Domain.PedidoSucursal Insert(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega) {
            return base.Channel.Insert(entity, FechaRegistro, FechaEntrega);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal> InsertAsync(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega) {
            return base.Channel.InsertAsync(entity, FechaRegistro, FechaEntrega);
        }
        
        public AIPos.Domain.PedidoSucursal Update(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega) {
            return base.Channel.Update(entity, FechaRegistro, FechaEntrega);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal> UpdateAsync(AIPos.Domain.PedidoSucursal entity, long FechaRegistro, long FechaEntrega) {
            return base.Channel.UpdateAsync(entity, FechaRegistro, FechaEntrega);
        }
        
        public void Delete(int Id) {
            base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int Id) {
            return base.Channel.DeleteAsync(Id);
        }
        
        public AIPos.Domain.PedidoSucursal[] SelectBySucursalFecha(int SucursalId, long Day) {
            return base.Channel.SelectBySucursalFecha(SucursalId, Day);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal[]> SelectBySucursalFechaAsync(int SucursalId, long Day) {
            return base.Channel.SelectBySucursalFechaAsync(SucursalId, Day);
        }
        
        public AIPos.Domain.PedidoSucursal[] SelectBySucursalFechaEntrega(int SucursalId, long Day) {
            return base.Channel.SelectBySucursalFechaEntrega(SucursalId, Day);
        }
        
        public System.Threading.Tasks.Task<AIPos.Domain.PedidoSucursal[]> SelectBySucursalFechaEntregaAsync(int SucursalId, long Day) {
            return base.Channel.SelectBySucursalFechaEntregaAsync(SucursalId, Day);
        }
    }
}
